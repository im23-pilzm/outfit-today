generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(cuid())
  email          String          @unique
  password       String
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  clothingPieces ClothingPiece[]
  profile        UserProfile?    // Add this relation field
}

model UserProfile {
  id                String   @id @default(cuid())
  userId            String   @unique
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Profile preferences from your form
  favoriteStyle     String?  // casual, streetwear, sporty, etc.
  favoriteColor1    String?  // schwarz, weiss, grau, etc.
  favoriteColor2    String?  // second color choice
  favoriteBottom    String?  // jeans, chinos, jogginghose, etc.
  favoriteTop       String?  // t-shirt, hoodie, pullover, etc.
  favoriteShoes     String?  // sneaker, boots, sandalen, etc.
  favoriteMaterial  String?  // baumwolle, leinen, wolle, etc.
  profileImage      String?  // URL/path to profile image
  displayName       String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model ClothingPiece {
  id          Int      @id @default(autoincrement())
  image       String   // URL/path to image
  name        String
  brand       String?
  color       String
  size        String
  category    Category
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String   
  user        User     @relation(fields: [userId], references: [id])
}

enum Category {
  HEADWEAR
  TOP
  BOTTOM
  SHOES
}